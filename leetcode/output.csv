Section,Question No.,Time Complexity,Space Complexity,Premium,Tags,Notes
Bit Manipulation,2151,O(n^2 * 2^n),O(1),,"Bitmasks, Brute Force",
Bit Manipulation,2212,O(n * 2^n),O(n),,"Bitmasks, Brute Force",
Bit Manipulation,2220,O(logn),O(1),,Bit Manipulation,
Bit Manipulation,2275,O(nlogr),O(logr),,"Bit Manipulation, Freq Table",
Bit Manipulation,2317,O(n),O(1),,"Bit Manipulation, Greedy",
Bit Manipulation,2397,"O(m * n + m * C(n, k))",O(m),,"Bitmasks, `Hakmem Item 175`",
Bit Manipulation,2411,O(n),O(1),,"Bitmasks, Hash Table",
Bit Manipulation,2419,O(n),O(1),,Bit Manipulation,
Bit Manipulation,2425,O(n),O(1),,Bit Manipulation,
Bit Manipulation,2429,O(logn),O(1),,"Bit Manipulation, Greedy",
Bit Manipulation,2505,O(n),O(1),ðŸ”’,Bit Manipulation,
Bit Manipulation,2527,O(n),O(1),,"Bit Manipulation, Math",
Bit Manipulation,2595,O(1),O(1),,Bit Manipulation,
Array,2007,O(n + klogk),O(k),,,variant of [Array of Doubled Pairs](https://leetcode.com/problems/array-of-doubled-pairs/)
Array,2011,O(n),O(1),,,
Array,2012,O(n),O(n),,Prefix Sum,
Array,2016,O(n),O(1),,,variant of [Best Time to Buy and Sell Stock](https://leetcode.com/problems/best-time-to-buy-and-sell-stock/)
Array,2017,O(n),O(1),,Prefix Sum,
Array,2018,O(m * n),O(1),,,
Array,2022,O(m * n),O(1),,,
Array,2033,O(m * n)  on average,O(m * n),,"Math, Median, Quick Select",variant of [Minimum Moves to Equal Array Elements II](https://leetcode.com/problems/minimum-moves-to-equal-array-elements-ii/)
Array,2035,O(n * 2^n),O(2^n),,Meet in the Middle,
Array,2038,O(n),O(1),,,
Array,2055,O(n + q),O(n),,Prefix Sum,
Array,2057,O(n),O(1),,,
Array,2075,O(n),O(1),,,
Array,2078,O(n),O(1),,,
Array,2079,O(n),O(1),,,
Array,2098,O(n) on average,O(1),ðŸ”’,Quick Select,
Array,2099,O(n) on average,O(n),,Quick Select,
Array,2100,O(n),O(n),,Prefix Sum,
Array,2106,O(n),O(n),,Prefix Sum,
Array,2113,O(n),O(1),ðŸ”’,,
Array,2121,O(n),O(n),,Prefix Sum,
Array,2122,O(n^2),O(n),,,
Array,2128,O(m * n),O(1),ðŸ”’,,
Array,2132,O(m * n),O(m * n),,Prefix Sum,
Array,2155,O(n),O(1),,Prefix Sum,
Array,2194,O(26^2),O(1),,,
Array,2210,O(n),O(1),,Simulation,
Array,2219,O(n),O(1),ðŸ”’,Prefix Sum,
Array,2237,O(n + l),"O(min(n, l))",ðŸ”’,Line Sweep,
Array,2239,O(n),O(1),,Array,
Array,2245,O(m * n),O(m * n),,Prefix Sum,
Array,2256,O(n),O(1),,Prefix Sum,
Array,2270,O(n),O(1),,Prefix Sum,
Array,2271,O(nlogn),O(1),,"Sliding Window, Prefix Sum, Binary Search",
Array,2274,O(nlogn),O(1),,Sort,
Array,2293,O(n),O(1),,Simulation,
Array,2319,O(n^2),O(1),,Array,
Array,2326,O(m * n),O(1),,"Linked List, Array",
Array,2373,O(n^2),O(1),,Array,
Array,2382,O(n),O(n),,"Prefix Sum, Sorted List, BST, Union Find",
Array,2391,O(n * l),O(1),,"Prefix Sum, Simulation",
Array,2406,O(nlogn),O(n),,"Sort, Line Sweep",
Array,2407,O(nlogn),O(n),,"Segment Tree, Coordinate Compression",variant of [Longest Increasing Subsequence](https://leetcode.com/problems/longest-increasing-subsequence/)
Array,2428,O(m * n),O(1),,Brute Force,
Array,2432,O(l),O(1),,Array,
Array,2433,O(n),O(1),,Array,
Array,2438,O(logn + qlogr),O(logn),,Prefix Sum,
Array,2446,O(1),O(1),,Array,
Array,2460,O(n),O(1),,"Inplace, Array",
Array,2482,O(m * n),O(m + n),,Array,
Array,2500,O(m * nlogn),O(1),,Array,
Array,2515,O(n),O(1),,Array,
Array,2535,O(nlogr),O(1),,Array,
Array,2536,O(q + n^2),O(1),,"Line Sweep, Difference Matrix, Difference Array",
Array,2553,O(n * logr),O(1),,Array,
Array,2559,O(n + q),O(n),,Prefix Sum,
Array,2569,O(nlogn + m + qlogn),O(n),,Segment Tree,
Array,2574,O(n),O(1),,Prefix Sum,
Array,2580,O(nlogn),O(1),,"Sort, Array",
Array,2639,O(m * n),O(1),,Array,
Array,2640,O(n),O(1),,Prefix Sum,
Array,2643,O(m * n),O(1),,Array,
Array,2644,O(n * d),O(1),,Brute force,
Array,2655,O(nlogn),O(n),"ðŸ”’, variant of [Merge Intervals](https://leetcode.com/problems/merge-intervals/)","Sort, Line Sweep",Merge Intervals
Array,2660,O(n),O(1),,Array,
Array,2672,O(n + q),O(n),,Array,
Array,2683,O(n),O(1),,Array,
Array,2711,O(m * n),"O(min(m, n))",,Prefix Sum,
Array,2717,O(n),O(1),,Array,
Array,2733,O(n),O(1),,Array,
Array,2760,O(n),O(1),,Array,
Array,2765,O(n),O(1),,Array,
Array,2782,O(n^2),O(1),ðŸ”’,Brute Force,
Array,2798,O(n),O(1),,Array,
String,2042,O(n),O(1),,,
String,2047,O(n),O(1),,,
String,2048,O(1),O(1),,"Permutations, Precompute, Binary Search",
String,2081,O(10^6),O(1),,"String, Palindrome, Brute Force",
String,2103,O(n),O(1),,,
String,2108,O(n),O(1),,,
String,2109,O(n),O(1),,Inplace,
String,2114,O(n),O(1),,,
String,2116,O(n),O(1),,,
String,2124,O(n),O(1),,,
String,2129,O(n),O(1),,,
String,2131,O(n),O(n),,,
String,2135,O(n),O(n),,Bitmasks,
String,2138,O(n),O(1),,,
String,2156,O(n),O(1),,"`Rabin-Karp Algorithm`, Rolling Hash",
String,2157,O(26 * n),O(26 * n),,"Bitmasks, Union Find",
String,2168,O(n^2),O(n^2),ðŸ”’,"`Rabin-Karp Algorithm`, Rolling Hash",
String,2185,O(n * p),O(1),,,
String,2186,O(n),O(1),,,variant of [Minimum Number of Steps to Make Two Strings Anagram](https://leetcode.com/problems/minimum-number-of-steps-to-make-two-strings-anagram/)
String,2211,O(n),O(1),,"Counting, Simulation",
String,2213,O(nlogn),O(n),,Segment Tree,
String,2223,O(n),O(n),,`Z-Function`,
String,2232,O(n^2),O(1),,Brute Force,
String,2243,O(n),O(n),,Simulation,
String,2255,O(n * l),O(1),,String,
String,2264,O(n),O(1),,String,
String,2269,O(logn),O(logn),,Sliding Window,
String,2272,O(a^2 * n),O(a),,`Kadane's Algorithm`,
String,2273,O(n * l),O(1),,"Freq Table, Sort",
String,2278,O(n),O(1),,String,
String,2288,O(n),O(1),,String,
String,2299,O(n),O(1),,String,
String,2301,O(n * k),O(m),,Brute Force,
String,2315,O(n),O(1),,String,
String,2381,O(n),O(n),,Line Sweep,
String,2390,O(n),O(n),,"String, Stack",
String,2414,O(n),O(1),,String,
String,2416,O(n * l),O(t),,Trie,
String,2490,O(n),O(1),,String,
String,2496,O(n * l),O(1),,String,
String,2575,O(n),O(1),,Prefix Sum,
String,2586,O(n),O(1),,String,
String,2678,O(n),O(1),,String,
String,2710,O(n),O(1),,String,
String,2729,O(logn),O(1),,"String, Bitmasks",
String,2788,O(n * l),O(l),,String,
String,2800,O(l),O(l),,"String, Brute Force, Longest Prefix Suffix, `KMP Algorithm`",
String,2810,O(n),O(n),,"String, Deque",
String,2828,O(n),O(1),,String,
Linked List,2058,O(n),O(1),,,
Linked List,2074,O(n),O(1),,,
Linked List,2095,O(n),O(1),,Two Pointers,
Linked List,2130,O(n),O(1),,Two Pointers,
Linked List,2181,O(n),O(1),,Two Pointers,
Linked List,2487,O(n),O(n),,Mono Stack,
Linked List,2674,O(n),O(1),ðŸ”’,"Two Pointers, Slow and Fast Pointers",
Linked List,2807,O(n),O(1),,Linked List,
Linked List,2816,O(n),O(1),,Linked List,
Stack,2104,O(n),O(n),,Mono Stack,
Stack,2197,O(nlogm),O(1),,"Stack, Math",
Stack,2281,O(n),O(n),,"Mono Stack, Prefix Sum",variant of [Largest Rectangle in Histogram](https://leetcode.com/problems/largest-rectangle-in-histogram/)
Stack,2282,O(m * n),O(m + n),"ðŸ”’, variant of [Number of Visible People in a Queue](https://leetcode.com/problems/number-of-visible-people-in-a-queue/)",Mono Stack,Number of Visible People in a Queue
Stack,2334,O(n),O(n),,Mono Stack,variant of [Maximum Subarray Min-Product](https://leetcode.com/problems/maximum-subarray-min-product/)
Stack,2355,O(n),O(n),ðŸ”’,"Mono Stack, Math",
Stack,2454,O(n),O(n),,Mono Stack,
Stack,2696,O(n),O(n),,Stack,
Stack,2735,O(n),O(n),,"Mono Stack, Difference Array, Prefix Sum, Binary Search, Mono Deque, Brute Force",
Stack,2736,O(nlogn + mlogm + mlogn),O(n + m),,"Sort, Mono Stack, Binary Search",
Stack,2764,O(n),O(n),ðŸ”’,Stack,
Stack,2832,O(n),O(n),ðŸ”’,Mono Stack,
Queue,2398,O(n),O(n),,"Mono Deque, Sliding Window, Two Pointers",
Binary Heap,2054,O(nlogn),O(n),,"Line Sweep, Heap",
Binary Heap,2163,O(nlogn),O(n),,"Heap, Prefix Sum",
Binary Heap,2208,O(nlogn),O(n),,Heap,
Binary Heap,2386,O(nlogn + klogk),O(n + k),,"BFS, Heap",
Binary Heap,2402,O(mlogm + n + mlogn),O(n),,Heap,
Binary Heap,2462,O(c + klogc),O(c),,"Heap, Two Pointers",
Binary Heap,2519,O(nlogk),O(n),ðŸ”’,"Heap, Ordered Set, Sorted List",
Binary Heap,2530,O(n + klogn),O(1),,"Heap, Simulation",
Binary Heap,2558,O(n + klogn),O(1),,"Heap, Simulation",
Binary Heap,2818,O(sqrt(r) + nlogr + klogn),O(sqrt(r) + n),,"Number Theory, `Linear Sieve of Eratosthenes`, Mono Stack, Greedy, Sort, Heap",
Tree,2003,O(n),O(n),,"DFS, Stack",
Tree,2096,O(n),O(h),,"DFS, Stack",
Tree,2179,O(nlogn),O(n),,"BIT, Fenwick Tree",variant of [Create Sorted Array through Instructions](https://leetcode.com/problems/create-sorted-array-through-instructions/)
Tree,2196,O(n),O(n),,,
Tree,2236,O(1),O(1),,Tree,
Tree,2277,O(n + q),O(n),ðŸ”’,"Tree, BFS, Binary Lifting, `Tarjan's Offline LCA Algorithm`",
Tree,2421,O(nlogn),O(n),,"Sort, Union Find",
Tree,2509,O(q * n),O(1),,"Tree, LCA",
Hash Table,2006,O(n),O(n),,,variant of [Two Sum](https://leetcode.com/problems/two-sum/)
Hash Table,2023,O(n * l),O(n),,,variant of [Two Sum](https://leetcode.com/problems/two-sum/)
Hash Table,2025,O(n),O(n),,Prefix Sum,
Hash Table,2032,O(n),"O(min(n, r))",,Counting,
Hash Table,2053,O(n),O(n),,,
Hash Table,2068,O(n),O(1),,,
Hash Table,2085,O(m + n),O(m + n),,,
Hash Table,2120,O(m),O(m),,,
Hash Table,2150,O(n),O(n),,,
Hash Table,2154,O(n),O(n),,,
Hash Table,2170,O(n),O(n),,Freq Table,
Hash Table,2190,O(n),O(n),,Freq Table,
Hash Table,2201,O(a + d),O(d),,Hash Table,
Hash Table,2206,O(n),O(n),,Hash Table,
Hash Table,2215,O(n),O(n),,Hash Table,
Hash Table,2225,O(nlogn),O(n),,"Hash Table, Sort",
Hash Table,2229,O(n),O(n),ðŸ”’,"Hash Table, Sort",
Hash Table,2260,O(n),O(n),,Hash Table,
Hash Table,2261,O(n^2),O(t),,"Trie, `Rabin-Karp Algorithm`",
Hash Table,2283,O(n),O(1),,Freq Table,
Hash Table,2284,O(n * l),O(n),,Freq Table,
Hash Table,2287,O(n + m),O(1),,Freq Table,
Hash Table,2295,O(n + m),O(n),,Hash Table,
Hash Table,2306,O(26 * n * l),O(n * l),,"Hash Table, Math",
Hash Table,2309,O(n),O(1),,"Freq Table, Hash Table",
Hash Table,2325,O(n + m),O(1),,"String, Hash Table",
Hash Table,2341,O(n),O(r),,Freq Table,
Hash Table,2342,O(nlogr),O(n),,"Hash Table, Greedy",
Hash Table,2347,O(1),O(1),,Freq Table,
Hash Table,2351,O(n),O(1),,"String, Hash Table",
Hash Table,2352,O(n^2),O(n^2),,Hash Table,
Hash Table,2354,O(n),O(n),,"Bit Manipulation, Sort, Two Pointers, Freq Table, Combinatorics",
Hash Table,2357,O(n),O(n),,Hash Table,
Hash Table,2363,O((m + n) * log(m + n)),O(m + n),,"Freq Table, Sort",
Hash Table,2364,O(n),O(n),,Hash Table,variant of [Count Nice Pairs in an Array](https://leetcode.com/problems/count-nice-pairs-in-an-array/)
Hash Table,2365,O(n),O(n),,Hash Table,
Hash Table,2367,O(n),O(n),,Hash Table,
Hash Table,2374,O(n),O(n),,Hash Table,
Hash Table,2395,O(n),O(n),,Hash Table,
Hash Table,2399,O(n),O(1),,Hash Table,
Hash Table,2404,O(n),O(n),,Freq Table,
Hash Table,2423,O(n),O(1),,"Brute Force, Freq Table",
Hash Table,2441,O(n),O(n),,Hash Table,
Hash Table,2442,O(nlogr),O(n),,Hash Table,
Hash Table,2451,O(m * n),O(1),,Freq Table,
Hash Table,2452,O(25 * l * (n + q)),O(25 * l * n),,"Brute Force, Hash",variant of [MHC2022 - Round 3](https://www.facebook.com/codingcompetitions/hacker-cup/2022/round-3/problems/C)
Hash Table,2453,O(n),O(s),,Freq Table,
Hash Table,2456,O(n),O(n),,Hash Table,
Hash Table,2484,O(100 * n),O(100 * n),,"Freq Table, Prefix Sum, DP",
Hash Table,2488,O(n),O(n),,"Freq Table, Prefix Sum",
Hash Table,2489,O(n),O(n),ðŸ”’,"Freq Table, Prefix Sum",
Hash Table,2491,O(n),O(n),,Freq Table,
Hash Table,2501,O(nlogn),O(n),,"Hash Table, DP",
Hash Table,2506,O(n * l),O(n),,"Freq Table, Bitmask",
Hash Table,2531,O(m + n),O(1),,Freq Table,
Hash Table,2564,O(n * logr + q),"O(min(n * logr, r))",,Hash Table,
Hash Table,2588,O(n),O(n),,"Freq Table, Combinatorics",
Hash Table,2592,O(n),O(n),,"Freq Table, Contructive Algorithms, Sort, Greedy, Two Pointers",
Hash Table,2598,O(n),O(k),,Freq Table,
Hash Table,2605,O(m + n),O(m + n),,Hash Table,
Hash Table,2615,O(n),O(n),,"Freq Table, Prefix Sum",
Hash Table,2657,O(n),O(n),,Freq Table,
Hash Table,2661,O(m * n),O(m * n),,Hash Table,
Hash Table,2670,O(n),O(n),,"Hash Table, Prefix Sum",
Hash Table,2716,O(n),O(1),,Hash Table,
Hash Table,2718,O(n + q),O(n),,Hash Table,
Hash Table,2744,O(n),O(1),,Hash Table,
Hash Table,2748,O(nlogr),O(1),,"Number Theory, Freq Table",
Hash Table,2766,O(nlogn),O(n),,"Hash Table, Sort",
Hash Table,2768,O(c),O(c),,Freq Table,
Hash Table,2784,O(n),O(n),,Freq Table,
Hash Table,2808,O(n),O(n),,Hash Table,
Hash Table,2815,O(nlogr),O(1),,Hash Table,
Math,2001,O(n),O(n),,Math,
Math,2005,O(1),O(1),ðŸ”’,"Math, `Sprague-Grundy Theorem`, `Colon Principle`",
Math,2028,O(n),O(1),,,
Math,2029,O(n),O(1),,,
Math,2063,O(n),O(1),,Combinatorics,
Math,2073,O(n),O(1),,"Simulation, Math",
Math,2083,O(n),O(1),ðŸ”’,Combinatorics,
Math,2091,O(n),O(1),,Math,
Math,2110,O(n),O(1),,"Math, Combinatorics",
Math,2117,O(r - l),O(1),,Math,
Math,2119,O(1),O(1),,Math,
Math,2125,O(m * n),O(1),,Math,
Math,2133,O(n^2),O(n),,Math,
Math,2145,O(n),O(1),,Math,
Math,2148,O(n),O(1),,Math,
Math,2152,O(n * 2^n),O(n^2),ðŸ”’,"Math, Hash Table, Bitmasks",
Math,2169,"O(log(min(m, n)))",O(1),,"Math, `Euclidean Algorithm`",
Math,2171,O(nlogn),O(1),,"Math, Sort",
Math,2176,O(nlogk + n * sqrt(k)),O(n + sqrt(k)),,Math,
Math,2177,O(1),O(1),,Math,
Math,2180,O(logn),O(1),,Math,
Math,2183,O(nlogk + k),O(sqrt(k)),,Math,variant of [Count Equal and Divisible Pairs in an Array](https://leetcode.com/problems/count-equal-and-divisible-pairs-in-an-array/)
Math,2198,O(d^3),O(d),ðŸ”’,"Math, Combinatorics",
Math,2217,O(n * l),O(1),,Math,
Math,2221,O(n),O(1),,"Simulation, Combinatorics, Number Thoery",
Math,2235,O(1),O(1),,Math,
Math,2240,O(sqrt(t)),O(1),,Math,
Math,2244,O(n),O(n),,"Math, Freq Table",
Math,2249,O(n * r^2),"O(min(n * r^2, maxx * maxy))",,"Math, Hash Table",
Math,2262,O(n),O(26),,Combinatorics,variant of [Count Unique Characters of All Substrings of a Given String](https://leetcode.com/problems/count-unique-characters-of-all-substrings-of-a-given-string/)
Math,2280,O(nlogn),O(1),,"Sort, Math, GCD",
Math,2310,O(1),O(1),,Math,
Math,2338,O(sqrt(m) + n + m * (logm + sqrt(m)/log(sqrt(m)))),O(sqrt(m) + n + logm),,"DP, `Linear Sieve of Eratosthenes`, Factorization, Combinatorics",variant of [Count Ways to Make Array With Product](https://leetcode.com/problems/count-ways-to-make-array-with-product/)
Math,2344,O(n + m + logr),O(1),,"Math, GCD",
Math,2345,O(nlogn),O(1),ðŸ”’,"Math, Sort, Mono Stack",
Math,2376,O(logn),O(logn),,Combinatorics,variant of [Numbers With Repeated Digits](https://leetcode.com/problems/numbers-with-repeated-digits/)
Math,2396,O(1),O(1),,Math,
Math,2400,O(k),O(k),,Combinatorics,
Math,2409,O(1),O(1),,"String, Math, Prefix Sum",
Math,2413,O(1),O(1),,"Math, Bit Manipulation",
Math,2427,"O(log(min(a, b)) + sqrt(gcd))",O(1),,Math,
Math,2437,O(1),O(1),,Combinatorics,
Math,2450,O(logn),O(1),ðŸ”’,Combinatorics,
Math,2455,O(n),O(1),,Math,
Math,2468,O(n + rlogr),O(1),,"Brute Force, Math",
Math,2469,O(1),O(1),,Math,
Math,2481,O(1),O(1),,Math,
Math,2485,O(1),O(1),,Math,
Math,2514,O(n),O(n),,"Math, Combinatorics",
Math,2520,O(logn),O(1),,Math,
Math,2521,precompute: O(sqrt(MAXN))<br>runtime: O(m + nlog(logn)),O(sqrt(MAXN)),,"Number Theory, `Linear Sieve of Eratosthenes`",
Math,2523,precompute: O(MAXN * log(MAXN))<br>runtime: O(log(MAXN)),O(MAXN),,"Number Theory, `Linear Sieve of Eratosthenes`, Segment Tree",
Math,2525,O(1),O(1),,Math,
Math,2539,O(26 * n),O(n),ðŸ”’,Combinatorics,
Math,2543,"O(log(min(a, b)))",O(1),,Number Theory,
Math,2544,O(logn),O(1),,Math,
Math,2549,O(1),O(1),,Math,
Math,2550,O(logn),O(1),,"Combinatorics, Fast Exponentiation",
Math,2562,O(nlogr),O(1),,Math,
Math,2568,O(logr),O(1),,"Math, Hash Table, Bit Manipulations",
Math,2579,O(1),O(1),,Math,
Math,2582,O(1),O(1),,Math,
Math,2584,O(n * sqrt(r)),O(sqrt(r)),,"Math, Number Theory",
Math,2614,precompute: O(MAXN)<br>runtime: O(n),O(MAXN),,"Number Theory, `Linear Sieve of Eratosthenes`",
Math,2651,O(1),O(1),,Math,
Math,2652,O(1),O(1),,"Math, Principle of Inclusion and Exclusion",
Math,2656,O(n),O(1),,Math,
Math,2731,O(nlogn),O(1),,"Sort, Math",
Math,2739,O(1),O(1),,Math,
Math,2749,O(1),O(1),,"Linear Search, Bit Manipulations, Math",
Math,2750,O(n),O(1),,Combinatorics,
Math,2761,O(n),O(n),,"Number Theory, `Linear Sieve of Eratosthenes`",
Math,2778,O(sqrt(n)),O(1),,Number Theory,
Math,2780,O(n),O(1),,"`Boyerâ€“Moore Majority Vote Algorithm`, Linear Search",
Math,2802,O(logn),O(1),ðŸ”’,"Math, Bitmasks",
Math,2806,O(1),O(1),,Math,
Math,2833,O(1),O(1),,Math,
Sort,2015,O(nlogn),O(n),ðŸ”’,Line Sweep,
Sort,2021,O(nlogn),O(n),ðŸ”’,Line Sweep,
Sort,2070,O(nlogn + qlogn),O(1),,"Sort, Binary Search",
Sort,2089,O(n),O(1),,Counting Sort,
Sort,2158,O(nlogr),O(r),ðŸ”’,"Line Sweep, Sorted List, Heap, Segment Tree",
Sort,2164,O(n),O(c),,"Counting Sort, Inplace",
Sort,2191,O(nlogm + nlogn),O(n),,Sort,
Sort,2231,O(logn),O(1),,Counting Sort,
Sort,2233,O(n + k),O(n),,"Heap, Freq Table, Sort, Math",
Sort,2248,O(n * l + r),O(l),,"Hash Table, Counting Sort",
Sort,2251,O(nlogn + mlogn),O(n),,"Line Sweep, Binary Search",
Sort,2343,O(q + n * t),O(t + n + q),,"Sort, Quick Select, Radix Sort",
Sort,2418,O(nlogn),O(n),,Sort,
Sort,2497,O(n),O(n),,"Sort, Quick Select",
Sort,2512,O(pf * l + nf * l + n * l + klogk),O(pf * l + nf * l + n),,"Partial Sort, Quick Select",
Sort,2545,O(mlogm),O(1),,Sort,
Sort,2659,O(nlogn),O(n),,"Sort, BIT, Fenwick Tree",
Sort,2679,O(m * nlogn),O(1),,Sort,
Sort,2740,O(nlogn),O(1),,Sort,
Sort,2785,O(n),O(1),,Counting Sort,
Sort,2792,O(k * h),O(k + h),ðŸ”’,Merge Sort,
Two Pointers,2009,O(nlogn),O(1),,"Two Pointers, Sliding Window",
Two Pointers,2024,O(n),O(1),,Sliding Window,variant of [Longest Repeating Character Replacement](https://leetcode.com/problems/longest-repeating-character-replacement/)
Two Pointers,2040,O((m + n) * logr),O(1),,"Binary Search, Two Pointers",
Two Pointers,2046,O(n),O(1),ðŸ”’,Linked List,
Two Pointers,2062,O(n),O(1),,Sliding Window,variant of [Count Number of Nice Subarrays](https://leetcode.com/problems/count-number-of-nice-subarrays/)
Two Pointers,2067,O(n),O(1),ðŸ”’,Sliding Window,
Two Pointers,2090,O(n),O(1),,Sliding Window,
Two Pointers,2105,O(n),O(1),,Simulation,
Two Pointers,2107,O(n),O(n),ðŸ”’,Sliding Window,
Two Pointers,2134,O(n),O(1),,Sliding Window,
Two Pointers,2149,O(n),O(1),,Two Pointers,
Two Pointers,2161,O(n),O(n),,Two Pointers,
Two Pointers,2200,O(n),O(1),,Two Pointers,
Two Pointers,2234,O(nlogn),O(1),,"Sort, Prefix Sum, Greedy, Binary Search, Two Pointers",
Two Pointers,2302,O(n),O(1),,"Two Pointers, Sliding Window",
Two Pointers,2330,O(n),O(1),ðŸ”’,"String, Two Pointers",
Two Pointers,2332,O(nlogn + mlogm),O(1),,"String, Two Pointers",
Two Pointers,2337,O(n + m),O(1),,"String, Two Pointers",
Two Pointers,2348,O(n),O(1),,"Two Pointers, Combinatorics",
Two Pointers,2379,O(n),O(1),,Sliding Window,
Two Pointers,2393,O(n),O(1),ðŸ”’,Two Pointers,
Two Pointers,2401,O(n),O(1),,"Sliding Window, Two Pointers",
Two Pointers,2444,O(n),O(1),,Two Pointers,variant of [Number of Substrings Containing All Three Characters](https://leetcode.com/problems/number-of-substrings-containing-all-three-characters/)
Two Pointers,2461,O(n),O(k),,Two Pointers,
Two Pointers,2465,O(nlogn),O(n),,"Two Pointers, Hash Table",
Two Pointers,2511,O(n),O(1),,"Array, Two Pointers",
Two Pointers,2516,O(n),O(1),,"Sliding Window, Two Pointers",
Two Pointers,2524,O(n),O(n),ðŸ”’,"Sliding Window, Two Pointers, Freq Table, Hash Table",
Two Pointers,2537,O(n),O(n),,"Sliding Window, Two Pointers",
Two Pointers,2540,O(n),O(1),,Two Pointers,
Two Pointers,2555,O(n),O(n),,"Two Pointers, Sliding Window, DP",
Two Pointers,2563,O(nlogn),O(1),,"Sort, Two Pointers",
Two Pointers,2570,O(n),O(1),,Two Pointers,
Two Pointers,2609,O(n),O(1),,"String, Two Pointers",
Two Pointers,2653,O(nlogk),O(k),,"Sorted List, Ordered Set, Two Pointers",
Two Pointers,2730,O(n),O(1),,Two Pointers,
Two Pointers,2743,O(n),O(1),"ðŸ”’, variant of [Longest Substring Without Repeating Characters](https://leetcode.com/problems/longest-substring-without-repeating-characters/)","Two Pointers, Sliding Window",Longest Substring Without Repeating Characters
Two Pointers,2747,O(nlogn + mlogm),O(n + m),,"Sort, Two Pointers, Line Sweep",
Two Pointers,2762,O(n),O(1),,"Mono Deque, BST, Ordered Dict, Two Pointers, Sliding Window",
Two Pointers,2763,O(n),O(n),,"Two Pointers, Sliding Window, Hash Table, Combinatorics",
Two Pointers,2779,O(nlogn),O(1),,"Sort, Two Pointers, Sliding Window",
Two Pointers,2781,O((m + n) * l),O(t),,"Two Pointers, Sliding Window, Trie",
Two Pointers,2799,O(n),O(n),,"Freq Table, Two Pointers, Sliding Window",
Two Pointers,2824,O(nlogn),O(1),,"Sort, Two Pointers",
Two Pointers,2831,O(n),O(n),,"Freq Table, Two Pointers, Sliding Window",
Recursion,2613,O(n) on average,O(n),"ðŸ”’, variant of [SPOJ - Closest Point Pair](https://www.spoj.com/problems/CLOPPAIR/)","Random Algorithms, Divide and Conquer, Merge Sort, Segment Tree",SPOJ - Closest Point Pair
Binary Search,2064,O(nlogm),O(1),,,variant of [Minimum Limit of Balls in a Bag](https://leetcode.com/problems/minimum-limit-of-balls-in-a-bag/)
Binary Search,2111,O(nlog(n/k)),O(n/k),,,variant of [Longest Increasing Subsequence](https://leetcode.com/problems/longest-increasing-subsequence/)
Binary Search,2137,O(nlogr),O(1),ðŸ”’,,
Binary Search,2187,O(nlogr),O(1),,,
Binary Search,2226,O(nlogr),O(1),,Binary Search,
Binary Search,2250,O(nlogn + m * maxy * logn),O(n),,"Bucket Sort, Binary Search",
Binary Search,2300,O(mlogm + nlogm),O(1),,Binary Search,
Binary Search,2333,O(nlogn + nlogr),O(1),,Binary Search,
Binary Search,2387,O(logr * mlogn),O(1),ðŸ”’,Binary Search,
Binary Search,2389,O(nlogn + qlogn),O(1),,"Greedy, Sort, Binary Search",
Binary Search,2448,O(nlogn),O(n),,"Math, Binary Search, Prefix Sum",
Binary Search,2476,O(n + qlogn),O(n),,"DFS, Binary Search",
Binary Search,2513,"O(log(min(d1, d2)))",O(1),,"Number Theory, Binary Search",
Binary Search,2517,O(nlogr),O(1),,"Binary Search, Greedy",
Binary Search,2528,O(nlogk),O(n),,"Binary Search, Sliding Window, Greedy",
Binary Search,2529,O(logn),O(1),,Binary Search,
Binary Search,2554,O(b),O(b),,"Math, Binary Search, Prefix Sum, Greedy",
Binary Search,2557,O(b),O(b),ðŸ”’,"Math, Binary Search, Prefix Sum",
Binary Search,2560,O(nlogn),O(n),,"Binary Search, Greedy",
Binary Search,2594,O(mx * (logc + log(mn))),O(mx),,"Freq Table, Binary Search, Heap, Simulation",
Binary Search,2602,O(nlogn + qlogn),O(n),,"Sort, Binary Search, Prefix Sum",
Binary Search,2616,O(nlogn + nlogr),O(1),,"Sort, Binary Search, Greedy",
Binary Search,2702,O(nlogr),O(1),ðŸ”’,"Binary Search, Greedy",
Binary Search Tree,2426,O(nlogn),O(n),,"Merge Sort, Two Pointers, BIT, Fenwick Tree, Coordinate Compression, Sorted List, Ordered Set, Binary Search",
Binary Search Tree,2689,O(h),O(1),ðŸ”’,BST,
Binary Search Tree,2817,O(nlogn),O(n),,"Sorted List, BST, Binary Search",
Breadth-First Search,2039,O(\,E\,,E\,_O(\
Breadth-First Search,2045,O(\,E\,,E\,_O(\
Breadth-First Search,2050,O(\,V\,,)_,E\
Breadth-First Search,2059,O(m * n),O(m),,,
Breadth-First Search,2115,O(\,E\,,E\,_O(\
Breadth-First Search,2146,O(m * n + klogk),O(m * n),,"BFS, Quick Select, Sort",
Breadth-First Search,2258,O(m * n),O(m * n),,BFS,
Breadth-First Search,2290,O(m * n),O(m * n),,"`A* Search Algorithm`, 0-1 BFS, Deque",variant of [Minimum Cost to Make at Least One Valid Path in a Grid](https://leetcode.com/problems/minimum-cost-to-make-at-least-one-valid-path-in-a-grid/)
Breadth-First Search,2316,O(n),O(n),,"Flood Fill, BFS, Math",
Breadth-First Search,2368,O(n),O(n),,BFS,
Breadth-First Search,2415,O(n),O(n),,BFS,
Breadth-First Search,2471,O(nlogn),O(w),,"Sort, BFS",
Breadth-First Search,2492,O(n + m),O(n + m),,BFS,
Breadth-First Search,2493,O(n^2),O(n),,"BFS, DFS",variant of [Is Graph Bipartite?](https://leetcode.com/problems/is-graph-bipartite/)
Breadth-First Search,2503,O((m * n + q) * log(m * n)),O(m * n),,"BFS, Heap, Prefix Sum, Binary Search",
Breadth-First Search,2577,O(m * n * log\(m * n\)),O(m * n),,`Dijkstra's Algorithm`,
Breadth-First Search,2583,O(n),O(n),,"BFS, Quick Select",
Breadth-First Search,2603,O(n),O(n),,"Tree, BFS",
Breadth-First Search,2612,O(n),O(n),,"BFS, Union Find, BST, Sorted List",
Breadth-First Search,2617,O(m * n),O(m * n),,"BFS, Union Find, BST, Sorted List",variant of [Minimum Reverse Operations](https://leetcode.com/problems/minimum-reverse-operations/)
Breadth-First Search,2641,O(n),O(w),,BFS,
Breadth-First Search,2658,O(m * n),O(m + n),,"BFS, DFS",
Breadth-First Search,2685,O(n),O(n),,BFS,
Breadth-First Search,2709,precompute: O(sqrt(r))<br>runtime: O(nlogr),O(sqrt(r) + nlogr),,"`Linear Sieve of Eratosthenes`, Factorization, BFS",
Breadth-First Search,2812,O(n^2),O(n^2),,"BFS, Bucket Sort, Union Find, `Dijkstra's Algorithm`, Binary Search",
Breadth-First Search,2814,O(m * n),O(m * n),ðŸ”’,"Simulation, BFS",
Depth-First Search,2049,O(n),O(n),,,
Depth-First Search,2065,O(\,V\,,+ 4^10)_,E\
Depth-First Search,2192,O(\,V\,,)_,E\
Depth-First Search,2246,O(n),O(h),,"DFS, BFS, Topological Sort",
Depth-First Search,2265,O(n),O(h),,"DFS, Tree",
Depth-First Search,2322,O(n^2),O(n),,"DFS, Tree",
Depth-First Search,2331,O(n),O(h),,DFS,
Depth-First Search,2385,O(n),O(h),,"BFS, DFS, Tree DP",
Depth-First Search,2445,O(q + h),O(q + h),ðŸ”’,"Tree, DFS, BFS",
Depth-First Search,2458,O(n),O(n),,"Tree, DFS",
Depth-First Search,2467,O(n),O(n),,"Tree, DFS",
Depth-First Search,2477,O(n),O(h),,"Tree, DFS",
Depth-First Search,2581,O(n),O(h),,"Tree, DFS",
Depth-First Search,2773,O(n),O(h),ðŸ”’,"Tree, DFS, BFS",
Depth-First Search,2791,O(n),O(n),,"Tree, DFS, Freq Table",
Backtracking,2014,O(n * (n/k)!),O(n/k),,,
Backtracking,2056,O(1),O(1),,,
Backtracking,2094,O(n),O(1),,,
Backtracking,2443,O(n^(1/(2*log2(10)))),O(log10(n)/2),,"Brute Force, Backtracking",
Backtracking,2664,O(m * n),O(1),ðŸ”’,"Backtracking, Greedy, `Warnsdorff's Rule`",
Backtracking,2698,O(n * (logn)^(2*logn)),O(logn),,Backtracking,
Backtracking,2741,O(n^2 * 2^n),O(n * 2^n),,"Backtracking, Memoization",
Dynamic Programming,2002,O(3^n),O(2^n),,"DP, Submask Enumeration",
Dynamic Programming,2008,O(n + mlogm),O(n),,DP,
Dynamic Programming,2019,O(n^3 * a^2),O(n^2),,,variant of [Burst Balloons](https://leetcode.com/problems/burst-balloons/)
Dynamic Programming,2031,O(n),O(n),ðŸ”’,"Prefix Sum, DP",
Dynamic Programming,2044,"O(min(2^n, m * n))","O(min(2^n, m))",,DP,
Dynamic Programming,2052,O(s + n * k),O(k),ðŸ”’,DP,
Dynamic Programming,2060,O(m * n * k),"O(min(m, n) * k)",,"DP, Memoization",
Dynamic Programming,2088,O(m * n),O(n),,DP,
Dynamic Programming,2140,O(n),O(n),,DP,
Dynamic Programming,2143,O(n^2 * v),O(n * v),ðŸ”’,DP,
Dynamic Programming,2167,O(n),O(1),,DP,
Dynamic Programming,2174,O((m * n) * 2^(m * n)),O(2^(m * n)),ðŸ”’,"DP, Bitmasks",
Dynamic Programming,2184,O(h * p^2),O(p^2),"ðŸ”’, variant of [Painting a Grid With Three Different Colors](https://leetcode.com/problems/painting-a-grid-with-three-different-colors/)","DP, Backtracking, Matrix Exponentiation",Painting a Grid With Three Different Colors
Dynamic Programming,2188,O((n + l) * logc),O(n + l + logc),,"Greedy, DP",
Dynamic Programming,2189,O(n^2),O(n),ðŸ”’,DP,
Dynamic Programming,2209,O(m * n),O(m * n),,DP,
Dynamic Programming,2218,"O(min(n * k^2, m * k)))",O(k),,DP,
Dynamic Programming,2222,O(n),O(1),,DP,
Dynamic Programming,2247,O(n^2 * 2^n),O(n * 2^n),ðŸ”’,"DP, Bitmasks, BFS",
Dynamic Programming,2266,O(n),O(1),,DP,
Dynamic Programming,2267,O(m * n * (m + n) / 32),O(n * (m + n) / 32),,"DP, Bitsets",variant of [Codeforces Round #801 C](https://codeforces.com/contest/1695/problem/C)
Dynamic Programming,2289,O(n),O(n),,"DP, Mono Stack",
Dynamic Programming,2291,O(n * b),O(b),ðŸ”’,DP,
Dynamic Programming,2297,O(n),O(1),ðŸ”’,"DP, Mono Stack",
Dynamic Programming,2304,O(m * n^2),O(n),,DP,
Dynamic Programming,2305,O(k * 3^n),O(2^n),,"DP, Submask Enumeration",
Dynamic Programming,2312,O(m * n * (m + n)),O(m + n),,DP,
Dynamic Programming,2313,O(n),O(h),ðŸ”’,Tree DP,
Dynamic Programming,2318,O(6^3 * n),O(6^2),,DP,
Dynamic Programming,2320,O(logn),O(1),,Matrix Exponentiation,variant of [Fibonacci Number](https://leetcode.com/problems/fibonacci-number/)
Dynamic Programming,2327,O(n),O(f),,DP,
Dynamic Programming,2328,O(m * n),O(m * n),,"Memoization, Topological Sort, DP",
Dynamic Programming,2361,O(n),O(1),ðŸ”’,DP,
Dynamic Programming,2369,O(n),O(1),,DP,
Dynamic Programming,2370,O(n),O(1),,DP,
Dynamic Programming,2378,O(n),O(n),ðŸ”’,"DFS, Stack, Tree DP",
Dynamic Programming,2380,O(n),O(1),,DP,
Dynamic Programming,2403,O(n * 2^n),O(2^n),ðŸ”’,"Bitmasks, DP",
Dynamic Programming,2420,O(n),O(n),,Prefix Sum,
Dynamic Programming,2430,O(n^2),O(n),,"DP, `Rabin-Karp Algorithm`, Rolling Hash, Longest Prefix Suffix, `KMP Algorithm`",
Dynamic Programming,2431,O(n * a * c),O(a * c),ðŸ”’,DP,
Dynamic Programming,2435,O(m * n * k),O(n * k),,DP,
Dynamic Programming,2447,O(nlogr),O(logr),,DP,
Dynamic Programming,2463,O(mlogm + nlogn + m * n),O(n),,"Sort, DP, Prefix Sum, Mono Deque",
Dynamic Programming,2464,O(n^2 * logr),O(n),ðŸ”’,DP,
Dynamic Programming,2466,O(n),O(n),,DP,
Dynamic Programming,2470,O(n * sqrt(k) * logk),O(sqrt(k)),,DP,variant of [Number of Subarrays With GCD Equal to K](https://leetcode.com/problems/number-of-subarrays-with-gcd-equal-to-k/)
Dynamic Programming,2470,O(n * sqrt(k) * logk),O(sqrt(k)),,DP,variant of [Number of Subarrays With GCD Equal to K](https://leetcode.com/problems/number-of-subarrays-with-gcd-equal-to-k/)
Dynamic Programming,2475,O(n),O(n),,"DP, Freq Table, Math",
Dynamic Programming,2478,O(n * k),O(n),,DP,
Dynamic Programming,2495,O(n),O(1),ðŸ”’,"DP, Math",
Dynamic Programming,2510,O(m * n),O(n),ðŸ”’,DP,
Dynamic Programming,2518,O(n * k),O(k),,Knapsack DP,
Dynamic Programming,2533,O(n),O(w),ðŸ”’,DP,
Dynamic Programming,2538,O(n),O(n),,"DFS, Tree DP",
Dynamic Programming,2547,O(n^2),O(n),,DP,
Dynamic Programming,2552,O(n^2),O(n),,"DP, Prefix Sum",variant of [132 Pattern](https://leetcode.com/problems/132-pattern/)
Dynamic Programming,2556,O(m * n),O(m + n),,"DP, DFS",
Dynamic Programming,2565,O(n),O(n),,"Two Pointers, DP",
Dynamic Programming,2572,O(n + m * 2^p),O(m * 2^p),,"Number Theory, Combinatorics, Bitmasks, Memoization, DP",
Dynamic Programming,2585,O(n * t * c),O(t),,Knapsack DP,
Dynamic Programming,2597,O(n),O(n),,"Combinatorics, DP",
Dynamic Programming,2638,O(n),O(n),"ðŸ”’, variant of [The Number of Beautiful Subsets](https://leetcode.com/problems/the-number-of-beautiful-subsets/)","Combinatorics, DP",The Number of Beautiful Subsets
Dynamic Programming,2646,O(t * n),O(n),,"DFS, Tree DP",
Dynamic Programming,2681,O(nlogn),O(1),,"Sort, Combinatorics, DP",
Dynamic Programming,2684,O(m * n),O(m),,"DP, BFS",
Dynamic Programming,2707,O(n * l),O(n + t),,"DP, Trie",
Dynamic Programming,2713,O(m * n * log(m * n)),O(m * n),,"Sort, DP",
Dynamic Programming,2719,O(m * n),O(m + n),,"Combinatorics, DP",
Dynamic Programming,2742,O(n^2),O(n),,Knapsack DP,
Dynamic Programming,2746,O(n),O(1),,DP,
Dynamic Programming,2767,O(n^2),O(n),,DP,
Dynamic Programming,2770,O(n^2),O(n),,DP,
Dynamic Programming,2771,O(n),O(1),,DP,
Dynamic Programming,2786,O(n),O(1),,DP,
Dynamic Programming,2787,O(nlogn),O(n),,Knapsack DP,
Dynamic Programming,2801,O(n),O(1),,DP,
Dynamic Programming,2809,O(n^2),O(n),,"Sort, Greedy, DP, Linear Search",
Dynamic Programming,2826,O(n),O(1),,DP,
Dynamic Programming,2827,O(n^2 * k),O(n * k),,"DP, Memoization",
Dynamic Programming,2830,O(n + m),O(n + m),,DP,
Greedy,2027,O(n),O(1),,,
Greedy,2030,O(n),O(n),,"Mono Stack, Greedy",
Greedy,2036,O(n),O(1),"variant of [Maximum Alternating Subsequence Sum](https://leetcode.com/problems/maximum-alternating-subsequence-sum/), ðŸ”’","Greedy, `Kadane's Algorithm`",Maximum Alternating Subsequence Sum
Greedy,2037,O(nlogn),O(1),,Greedy,
Greedy,2071,O(n * (logn)^2),O(n),,"Greedy, Binary Search, Sorted List",
Greedy,2086,O(n),O(1),,Greedy,
Greedy,2087,O(m + n),O(1),,Greedy,
Greedy,2126,O(nlogn),O(1),,Greedy,
Greedy,2136,O(nlogn),O(n),,Greedy,
Greedy,2139,O(logn),O(1),,,
Greedy,2141,O(nlogm),O(1),,"Greedy, Binary Search",
Greedy,2144,O(nlogn),O(1),,"Greedy, Sort",
Greedy,2147,O(n),O(1),,"Greedy, Combinatorics",
Greedy,2160,O(1),O(1),,Greedy,
Greedy,2165,O(d),O(d),,"Greedy, Counting Sort",
Greedy,2178,O(sqrt(n)),O(1),,Greedy,
Greedy,2182,O(n),O(1),,Greedy,
Greedy,2193,O(nlogn),O(n),,"Greedy, BIT, Fenwick Tree",
Greedy,2195,O(nlogn),O(n),,Greedy,
Greedy,2207,O(n),O(1),,"Counting, Greedy",
Greedy,2214,O(n),O(1),ðŸ”’,Greedy,
Greedy,2216,O(n),O(1),,Greedy,
Greedy,2224,O(1),O(1),,Greedy,
Greedy,2259,O(n),O(1),,Greedy,
Greedy,2263,O(nlogn),O(n),ðŸ”’,"DP, Greedy, Heap",
Greedy,2268,O(n),O(1),ðŸ”’,"Greedy, Sort",
Greedy,2279,O(nlogn),O(1),,"Greedy, Sort",
Greedy,2285,O(n),O(n),,"Greedy, Counting Sort",
Greedy,2294,O(nlogn),O(1),,Greedy,
Greedy,2311,O(n),O(1),,Greedy,
Greedy,2321,O(n),O(1),,"Greedy, `Kadane's Algorithm`",
Greedy,2323,O(nlogn),O(1),ðŸ”’,Greedy,
Greedy,2340,O(n),O(1),ðŸ”’,"Array, Greedy",
Greedy,2366,O(n),O(1),,"Greedy, Math",
Greedy,2371,O((m * n) * log(m * n)),O(m * n),ðŸ”’,"Sort, Greedy",
Greedy,2375,O(n),O(1),,"Constructive Algorithms, Greedy",
Greedy,2383,O(n),O(1),,Greedy,
Greedy,2384,O(n),O(1),,"Freq Table, Greedy",
Greedy,2405,O(n),O(n),,"Greedy, Hash Table",
Greedy,2410,O(nlogn + mlogm),O(1),,"Greedy, Sort",
Greedy,2412,O(n),O(1),,"Greedy, Constructive Algorithms",
Greedy,2417,O(logn),O(logn),ðŸ”’,"Constructive Algorithms, Greedy",
Greedy,2422,O(n),O(1),ðŸ”’,"Constructive Algorithms, Greedy, Two Pointers",
Greedy,2434,O(n),O(n),,"Freq Table, Greedy",
Greedy,2436,O(nlogr),O(1),ðŸ”’,Greedy,
Greedy,2439,O(n),O(1),,Greedy,
Greedy,2440,O(n * sqrt(n)),O(n),,"BFS, DFS, Greedy",
Greedy,2449,O(nlogn),O(1),,"Greedy, Sort",
Greedy,2457,O(logn),O(1),,Greedy,
Greedy,2459,O(n),O(n),ðŸ”’,"Greedy, Sort",
Greedy,2472,O(n * k),O(1),,"Two Pointers, Greedy",
Greedy,2479,O(nlogr),O(n),"ðŸ”’, variant of [Maximum XOR of Two Numbers in an Array](https://leetcode.com/problems/maximum-xor-of-two-numbers-in-an-array/)","DFS, Trie, Greedy",Maximum XOR of Two Numbers in an Array
Greedy,2483,O(n),O(1),,Greedy,
Greedy,2486,O(n),O(1),,"Two Pointers, Greedy",
Greedy,2498,O(n),O(1),,Greedy,
Greedy,2499,O(n),O(n),,Greedy,
Greedy,2522,O(n),O(1),,Greedy,
Greedy,2541,O(n),O(1),,Greedy,
Greedy,2542,O(nlogn),O(n),,"Greedy, Heap",variant of [Maximum Performance of a Team](https://leetcode.com/problems/maximum-performance-of-a-team/)
Greedy,2548,O(nlogn),O(1),ðŸ”’,"Greedy, Sort",
Greedy,2551,O(n) on average,O(1),,"Greedy, Quick Select",
Greedy,2561,O(n) on average,O(n),,"Freq Table, Greedy, Quick Select",
Greedy,2566,O(logn),O(1),,Greedy,
Greedy,2567,O(nlogn),O(1),,"Sort, Greedy",
Greedy,2571,O(logn),O(1),,"Greedy, Trick",
Greedy,2573,O(n^2),O(1),,"Constructive Algorithms, Greedy, DP",
Greedy,2576,O(nlogn),O(1),,"Sort, Greedy, Two Pointers",
Greedy,2578,O(mlogm),O(m),,"Sort, Greedy",
Greedy,2587,O(nlogn),O(1),,"Sort, Greedy",
Greedy,2589,O(nlogn + n * r),O(r),,"Sort, Greedy",
Greedy,2591,O(1),O(1),,"Greedy, Math",
Greedy,2599,O(nlogn),O(n),ðŸ”’,"Prefix Sum, Greedy, Heap",
Greedy,2600,O(1),O(1),,"Greedy, Math",
Greedy,2601,O(p + nlogp),O(p),,"Number Theory, Greedy, Binary Search",
Greedy,2604,O(mlogm + nlogn + (m + n) * logr),O(1),ðŸ”’,"Binary Search, Greedy",
Greedy,2606,O(n),O(1),,"Greedy, `Kadane's Algorithm`",
Greedy,2607,O(n),O(n),,"Math, Greedy, Quick Select",
Greedy,2611,O(n),O(1),,"Greedy, Quick Select",
Greedy,2645,O(n),O(1),,Greedy,
Greedy,2663,O(n),O(1),,Greedy,
Greedy,2673,O(n),O(1),,"Tree, Greedy",
Greedy,2680,O(n),O(n),,"Prefix Sum, Greedy",
Greedy,2697,O(n),O(1),,Greedy,
Greedy,2706,O(n),O(1),,Greedy,
Greedy,2708,O(n),O(1),,Greedy,
Greedy,2712,O(n),O(1),,Greedy,
Greedy,2734,O(n),O(1),,Greedy,
Greedy,2769,O(1),O(1),,"Greedy, Math",
Greedy,2772,O(n),O(1),,"Greedy, Sliding Window",
Greedy,2789,O(n),O(1),,Greedy,
Greedy,2790,O(n),O(n),,"Constructive Algorithms, Counting Sort, Greedy, Binary Search, Prefix Sum",
Greedy,2813,O(nlogk),O(k),,"Partial Sort, Heap, Quick Select, BST, Sorted List, Greedy",
Greedy,2819,O((n + q) * logn),O(n),ðŸ”’,"Sort, Binary Search, Greedy, Prefix Sum",
Greedy,2825,O(n),O(1),,"Greedy, Two Pointers",
Greedy,2835,O(n),O(logn),,"Counting Sort, Sort, Heap, Greedy, Bitmasks",[Educational Codeforces Round #82 D](https://codeforces.com/problemset/problem/1303/D)
Graph,2076,O(n * r),O(n),,Union Find,
Graph,2077,O(\,V\,,E\,_O(\
Graph,2092,O(nlogn),O(nlogn),,"BFS, DFS, Union Find",
Graph,2093,O(\,E\,,)_,V\
Graph,2097,O(\,V\,,)_,E\
Graph,2123,O(m * n * sqrt(m * n)),O(m + n),"variant of [Maximum Students Taking Exam](https://leetcode.com/problems/maximum-students-taking-exam/), ðŸ”’","`Hopcroft-Karp Bipartite Matching`, Maximum Independent Set",Maximum Students Taking Exam
Graph,2127,O(n),O(n),,,
Graph,2172,O(n^3),O(n^2),,"DP, `Hungarian Weighted Bipartite Matching`",variant of [Maximum Compatibility Score Sum](https://leetcode.com/problems/maximum-compatibility-score-sum/)
Graph,2203,O(\,E\,,)_,V\
Graph,2204,O(\,V\,,)_,E\
Graph,2242,O(\,V\,,)_,E\
Graph,2307,O(e + q),O(n),"ðŸ”’, variant of [Evaluate Division](https://leetcode.com/problems/evaluate-division/)","DFS, Union Find",Evaluate Division
Graph,2359,O(n),O(n),,"Graph, Hash Table, DFS",
Graph,2360,O(n),O(n),,"Graph, Hash Table, DFS",
Graph,2392,O(k^2 + r + c),O(k + r + c),,"Graph, Topological Sort",
Graph,2473,O(n * rlogn),O(n),ðŸ”’,`Dijkstra's Algorithm`,
Graph,2508,O(n),O(n),,Graph,
Graph,2608,O(n^2),O(n + e),,"Graph, BFS",
Graph,2662,O(n^2),O(n^2),,"Graph, `Dijkstra's Algorithm`",
Graph,2699,O(\,E\,,)_,V\
Graph,2714,O(n * k + (k * e) * log(n * k)),O(n * k + e),ðŸ”’,"Graph, `Dijkstra's Algorithm`",
Graph,2737,O(\,E\,,)_,V\
Graph,2836,O(n),O(n),,"Graph, Prefix Sum, Two Pointers, Sliding Window, Binary Lifting",
Geometry,2101,O(\,V\,,E\,* \
Simulation,2061,O(m * n),O(1),ðŸ”’,,
Simulation,2162,O(1),O(1),,,
Simulation,2257,O(m * n),O(m * n),,"Array, Simulation",
Simulation,2303,O(n),O(1),,Simulation,
Simulation,2507,O(s * logn),O(maxn^0.5),,"Number Theory, Simulation",
Simulation,2532,O(k + nlogk),O(k),,"Heap, Simulation",
Simulation,2534,O(n),O(n),ðŸ”’,"Queue, Simulation",
Simulation,2593,O(nlogn),O(n),,"Simulation, Sort, Hash Table",
Simulation,2596,O(m * n),O(m * n),,"Simulation, Hash Table",
Simulation,2682,O(n),O(n),,"Hash Table, Simulation",
Simulation,2751,O(nlogn),O(n),,"Sort, Simulation, Stack",
Constructive Algorithms,2202,"O(min(n, k))",O(1),,Constructive Algorithms,
Constructive Algorithms,2335,O(1),O(1),,"Math, Constructive Algorithms",
Constructive Algorithms,2350,O(n),O(k),,Constructive Algorithms,
Constructive Algorithms,2546,O(n),O(1),,Constructive Algorithms,
Constructive Algorithms,2358,O(1),O(1),,"Constructive Algorithms, Math",
Constructive Algorithms,2610,O(n),O(n),,"Freq Table, Constructive Algorithms",
Constructive Algorithms,2647,O(n^2),O(1),ðŸ”’,Constructive Algorithms,
Constructive Algorithms,2654,O(n^2),O(1),,"Math, Number Theory, Constructive Algorithms",
Constructive Algorithms,2728,O(k),O(1),ðŸ”’,Constructive Algorithms,
Constructive Algorithms,2732,O(m * 2^n),O(2^n),,"Bitmasks, Constructive Algorithms, Greedy",
Constructive Algorithms,2745,O(1),O(1),,"Constructive Algorithms, Math",
Constructive Algorithms,2753,O(k),O(1),ðŸ”’,Constructive Algorithms,
Constructive Algorithms,2811,O(n),O(1),,Constructive Algorithms,
Constructive Algorithms,2829,O(1),O(1),,"Greedy, Constructive Algorithms, Math",
Constructive Algorithms,2834,O(1),O(1),,"Greedy, Constructive Algorithms, Math",[Determine the Minimum Sum of a k-avoiding Array](https://leetcode.com/problems/determine-the-minimum-sum-of-a-k-avoiding-array/)
Design,2013,ctor: O(1)<br>add: O(1)<br>count: O(n),O(n),,,
Design,2034,ctor: O(1)<br>update: O(logn)<br>current: O(1)<br>max: O(1)<br>min: O(1),O(n),,"Sorted List, Heap",
Design,2043,ctor: O(1)<br>transer: O(1)<br>deposit: O(1)<br>withdraw: O(1),O(1),,,
Design,2069,O(1),O(1),,"Simulation, Math",
Design,2080,ctor: O(n)<br>query: O(logn),O(n),,Binary Search,
Design,2102,add: O(logn)<br>get: O(logn),O(n),,Sorted List,
Design,2166,ctor: O(n)<br>fix: O(1)<br>fix: O(1)<br>unfix: O(1)<br>flip: O(1)<br>all: O(1)<br>one: O(1)<br>count: O(1)<br>toString: O(n),O(n),,,
Design,2227,ctor: O(m + d)<br>encrypt: O(n)<br>decrypt: O(n),O(n),,Freq Table,
Design,2241,ctor: O(1)<br>deposit: O(1)<br>withdraw: O(1),O(1),,Greedy,
Design,2254,ctor: O(1)<br>upload: O(logn + l)<br>remove: O(logn)<br>like: O(1)<br>dislike: O(1)<br>view: O(1)<br>getLikesAndDislikes: O(1)<br>getViews: O(1),O(n * l),ðŸ”’,Heap,
Design,2276,"ctor: O(1)<br>add: O(logn), amortized<br>Count: O(1)",O(n),,Sorted List,
Design,2286,"ctor: O(n)<br>gather: O(logn)<br>scatter: O(logn), amortized",O(n),,"Segment Tree, Binary Search",
Design,2296,ctor: O(1)<br>addText: O(l)<br>deleteText: O(k)<br>cursorLeft: O(k)<br>cursorRight: O(k),O(n),,Stack,
Design,2336,ctor: O(1)<br>popSmallest: O(logn)<br>addBack: O(logn),O(n),,"Heap, BST",
Design,2349,ctor: O(1)<br>change: O(logn)<br>find: O(1),O(n),,"Sorted List, BST",
Design,2353,ctor: O(nlogn)<br>changeRating: O(logn)<br>highestRated: O(1),O(n),,"Sorted List, BST",
Design,2408,ctor: O(t * maxm)<br>insertRow: O(m)<br>deleteRow: O(1)<br>selectCell: O(m),O(d),ðŸ”’,Hash Table,
Design,2424,"ctor: O(1)<br>upload: O(1), amortized <br>longest: O(1)",O(n),,Hash Table,
Design,2502,ctor: O(1)<br>allocate: O(logn)<br>free: O(logn),O(n),,Sorted List,
Design,2526,O(1),O(1),,Array,
Design,2590,ctor: O(1)<br>addTask: O(l + logn)<br>getAllTasks: O(r)<br>getTasksForTag: O(r * c)<br>completeTask: O(l + logn),O(n * l),ðŸ”’,"BST, Sorted List",
Design,2642,ctor: O(\,V\,,)_<br>addEdge: _O(1)_<br>shortestPath: _O(\,E\
Design,2671,ctor: O(1)<br>add: O(1)<br>deleteOne: O(1)<br>hasFrequency: O(1),"O(min(n, r))",,Freq Table,
JS,2618,O(n),O(1),,,
JS,2619,O(1),O(1),,,
JS,2620,O(1),O(1),,,
JS,2621,O(1),O(1),,Promise,
JS,2622,O(1),O(1),,Hash Table,
JS,2623,O(1),O(1),,Hash Table,
JS,2624,O(m * n),O(1),,,
JS,2625,O(n),O(h),,DFS,
JS,2626,O(n),O(1),,,
JS,2627,O(1),O(1),,,
JS,2628,O(n),O(h),,DFS,
JS,2629,O(n),O(1),,,
JS,2630,O(n),O(t),,Trie,
JS,2631,O(n),O(1),,,
JS,2632,O(n),O(n),,,
JS,2633,O(n),O(h),,DFS,
JS,2634,O(n),O(1),,,
JS,2635,O(n),O(1),,,
JS,2636,O(c + n / c),O(c),,Promise,
JS,2637,O(n),O(1),,Promise,
JS,2648,O(1),O(1),,DP,
JS,2649,O(1),O(d),,DFS,
JS,2650,O(1),O(1),,Promise,
JS,2665,ctor: O(1)<br>increment: O(1)<br>decrement: O(1)<br>reset: O(1),O(1),,,
JS,2666,O(1),O(1),,,
JS,2667,O(1),O(1),,,
JS,2675,O(l * mlogm + m * n),O(l * m + m * n),,DFS,
JS,2676,O(1),O(1),,,
JS,2677,O(n),O(1),,,
JS,2690,O(1),O(1),ðŸ”’,Proxy,
JS,2691,O(1),O(1),ðŸ”’,Proxy,
JS,2692,O(1),O(1),ðŸ”’,Proxy,
JS,2693,O(1),O(1),,Symbol,
JS,2694,subscribe: O(1)<br>unsubscribe: O(1)<br>emit: O(n),O(n),,Ordered Set,
JS,2695,valueOf: O(n)<br>toString: O(n),O(1),,,
JS,2700,O(n),O(h),,DFS,
JS,2703,O(1),O(1),,,
JS,2704,O(1),O(1),,,
JS,2705,O(n),O(h),,DFS,
JS,2715,O(1),O(1),,,
JS,2721,O(n),O(n),,Promise,
JS,2722,O(mlogm + nlogn),O(1),,"Sort, Two Pointers",
JS,2723,O(1),O(1),,Promise,
JS,2724,O(nlogn),O(1),,Sort,
JS,2725,O(1),O(1),,,
JS,2726,O(1),O(1),,,
JS,2727,O(1),O(1),,,
JS,2754,O(1),O(1),ðŸ”’,Symbol,
JS,2755,O(n + m),O(h),ðŸ”’,DFS,
JS,2756,O(n),O(n),ðŸ”’,,
JS,2757,O(1),O(1),ðŸ”’,Generator,
JS,2758,O(1),O(1),ðŸ”’,,
JS,2759,O(n),O(h),ðŸ”’,Stack,
JS,2774,O(logn),O(1),ðŸ”’,Binary Search,
JS,2775,O(n),O(h),ðŸ”’,DFS,
JS,2776,O(1),O(1),ðŸ”’,Promise,
JS,2777,O(1),O(1),ðŸ”’,Generator,
JS,2794,O(n),O(1),ðŸ”’,,
JS,2795,O(n),O(n),ðŸ”’,Promise,
JS,2796,O(n * t),O(n * t),ðŸ”’,String,
JS,2797,O(n),O(n),ðŸ”’,,
JS,2803,O(n),O(1),ðŸ”’,Generator,
JS,2804,O(n),O(1),ðŸ”’,Symbol,
JS,2805,O(1),O(1),ðŸ”’,,
JS,2821,O(1),O(1),ðŸ”’,Promise,
JS,2822,O(n),O(1),ðŸ”’,,
JS,2823,O(n),O(h),ðŸ”’,DFS,
SQL,2004,O(nlogn),O(n),ðŸ”’,,
SQL,2010,O(nlogn),O(n),ðŸ”’,,
SQL,2020,O(m + n),O(m + n),ðŸ”’,,
SQL,2026,O(nlogn),O(n),ðŸ”’,,
SQL,2041,O(m + n),O(m + n),ðŸ”’,,
SQL,2051,O(m + n),O(m + n),ðŸ”’,,
SQL,2066,O(nlogn),O(n),ðŸ”’,,
SQL,2072,O(n),O(n),ðŸ”’,,
SQL,2082,O(n),O(n),ðŸ”’,,
SQL,2084,O(nlogn),O(n),ðŸ”’,,
SQL,2112,O(n),O(n),ðŸ”’,,
SQL,2118,O(nlogn),O(n),ðŸ”’,,
SQL,2142,O(p * b + blogb),O(p * b),ðŸ”’,,
SQL,2153,O(p * b + blogb),O(p * b),ðŸ”’,,
SQL,2159,O(nlogn),O(n),ðŸ”’,,
SQL,2173,O(nlogn),O(n),ðŸ”’,,
SQL,2175,O(nlogn),O(n),ðŸ”’,,
SQL,2199,O(n * mlogm),O(n * m),ðŸ”’,,
SQL,2205,O(n),O(n),ðŸ”’,,
SQL,2228,O(nlogn),O(n),ðŸ”’,,
SQL,2230,O(nlogn),O(n),ðŸ”’,,
SQL,2238,O(n),O(n),ðŸ”’,,
SQL,2252,O(n * m),O(n * m),ðŸ”’,,
SQL,2253,O(n * m),O(n * m),ðŸ”’,,
SQL,2292,O(nlogn),O(n),ðŸ”’,,
SQL,2298,O(n),O(n),ðŸ”’,,
SQL,2308,O(nlogn),O(n),ðŸ”’,,
SQL,2314,O(nlogn),O(n),ðŸ”’,,
SQL,2324,O(nlogn),O(n),ðŸ”’,,
SQL,2329,O(nlogn),O(n),ðŸ”’,,
SQL,2339,O(n^2),O(n^2),ðŸ”’,,
SQL,2346,O(nlogn),O(n),ðŸ”’,,
SQL,2356,O(n),O(n),ðŸ”’,,
SQL,2362,O(m + nlogn),O(n + m),ðŸ”’,,
SQL,2372,O(sp + c + s),O(sp + c + s),ðŸ”’,,
SQL,2377,O(nlogn),O(n),ðŸ”’,,
SQL,2388,O(nlogn),O(n),ðŸ”’,,
SQL,2394,O(n),O(n),ðŸ”’,,
SQL,2474,O(n),O(n),ðŸ”’,,
SQL,2480,O(n^2),O(n),ðŸ”’,,
SQL,2494,O(nlogn),O(n),ðŸ”’,,
SQL,2504,O(nlogn),O(n),ðŸ”’,,
SQL,2668,O(nlogn),O(n),ðŸ”’,,
SQL,2669,O(nlogn),O(n),ðŸ”’,,
SQL,2686,O(nlogn),O(n),ðŸ”’,,
SQL,2687,O(nlogn),O(n),ðŸ”’,,
SQL,2688,O(nlogn),O(n),ðŸ”’,,
SQL,2701,O(nlogn),O(n),ðŸ”’,,
SQL,2720,O(n^2),O(n^2),ðŸ”’,,
SQL,2738,O(n),O(n),ðŸ”’,,
SQL,2752,O(nlogn),O(n),ðŸ”’,,
SQL,2783,O(n * m + nlogn),O(n * m),ðŸ”’,,
SQL,2793,O(nlogn + m),O(n + m),ðŸ”’,,
SQL,2820,O(nlogn),O(n),ðŸ”’,,
